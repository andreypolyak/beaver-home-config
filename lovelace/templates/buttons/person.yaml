person:
  template: base_icon
  show_entity_picture: true
  show_state: false
  show_label: false
  hold_action:
    action: more-info
    entity: >
      [[[ return "person." + variables.person; ]]]
    haptic: success
  tap_action:
    action: call-service
    service: >
      [[[ return "script.find_iphone_" + variables.person; ]]]
    haptic: success
  confirmation:
    text: >
      [[[
        return "❗ Are you sure you want to find "
          + variables.person.charAt(0).toUpperCase()
          + variables.person.slice(1) + "'s phone?";
      ]]]
  state:
    - value: >
        [[[ return states["input_select." + variables.person + "_location"].state == "home"; ]]]
      operator: template
      color: var(--paper-item-icon-active-color)
    - value: >
        [[[ return states["input_select." + variables.person + "_location"].state != "home"; ]]]
      operator: template
      color: var(--paper-card-background-color)
  styles:
    card:
      - height: 100px
    entity_picture:
      - position: absolute
      - top: 4px
      - width: 40px
    custom_fields:
      battery:
        - position: absolute
        - right: 4px
        - top: 8px
        - font-size: 12px
      wifi:
        - position: absolute
        - right: 4px
        - top: 20px
        - font-size: 14px
      bt:
        - position: absolute
        - right: 4px
        - top: 36px
        - font-size: 14px
      activity:
        - position: absolute
        - left: 4px
        - top: 8px
        - font-size: 12px
      location:
        - position: absolute
        - width: 100%
        - top: 52px
        - font-size: 14px
        - white-space: initial
        - text-overflow: initial
        - overflow: initial
        - align-self: middle
      geocoded_location:
        - position: absolute
        - width: 100%
        - bottom: 4px
        - font-size: 8px
        - white-space: initial
        - text-overflow: initial
        - overflow: initial
        - align-self: middle
  custom_fields:
    battery: >
      [[[
        if (states["sensor." + variables.phone + "_battery_state"].state == "Not Charging") {
          return states["device_tracker.ha_" + variables.phone].attributes.battery_level + "%";
        } else {
          return `<ha-icon icon="mdi:battery-charging"
            style="width: 12px; height: 12px; position: relative; top: -2px;">
            </ha-icon>` +
            states["device_tracker.ha_" + variables.phone].attributes.battery_level + "%";
        }
      ]]]
    wifi: >
      [[[
        if (states["device_tracker.wifi_" + variables.phone].state == "home") {
          return `<ha-icon icon="mdi:wifi" style="width: 14px; height: 14px;"></ha-icon>`;
        } else {
          return "";
        }
      ]]]
    bt: >
      [[[
        if (states["device_tracker.bt_" + variables.phone].state == "home") {
          return `<ha-icon icon="mdi:bluetooth" style="width: 14px; height: 14px;"></ha-icon>`;
        } else {
          return "";
        }
      ]]]
    activity: >
      [[[
        if (states["sensor." + variables.phone + "_activity"].state == "Walking") {
          return `<ha-icon icon="mdi:walk" style="width: 14px; height: 14px;"></ha-icon>`;
        } else if (states["sensor." + variables.phone + "_activity"].state == "Automotive") {
          return `<ha-icon icon="mdi:car" style="width: 14px; height: 14px;"></ha-icon>`;
        } else {
          return "";
        }
      ]]]
    location: >
      [[[
        return states["sensor." + variables.person + "_display_location"].state;
      ]]]
    geocoded_location: >
      [[[
        return states["sensor." + variables.person + "_geocoded_location"].state;
      ]]]
  variables:
    person: ""
    phone: ""
