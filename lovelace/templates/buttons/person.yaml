person:
  template: base_icon
  show_entity_picture: true
  show_state: false
  show_label: false
  hold_action:
    action: more-info
    entity: >
      [[[ return `person.${variables.person}`; ]]]
    haptic: success
  tap_action:
    action: call-service
    service: >
      [[[ return `script.find_iphone_${variables.person}`; ]]]
    haptic: success
  confirmation:
    text: >
      [[[
        const name = variables.person.charAt(0).toUpperCase() + variables.person.slice(1);
        return `❗ Are you sure you want to find ${name}'s phone?`;
      ]]]
  state:
    - value: >
        [[[ return states[`input_select.${variables.person}_location`].state == "home"; ]]]
      operator: template
      color: var(--paper-item-icon-active-color)
    - operator: default
      color: var(--paper-card-background-color)
  styles:
    card:
      - height: 100px
    entity_picture:
      - position: absolute
      - top: 4px
      - width: 40px
    custom_fields:
      battery:
        - position: absolute
        - right: 8px
        - top: 4px
        - font-size: 12px
      wifi:
        - position: absolute
        - right: 8px
        - top: 20px
        - width: 14px
        - height: 14px
        - font-size: 0px
      bt:
        - position: absolute
        - right: 8px
        - top: 36px
        - width: 14px
        - height: 14px
        - font-size: 0px
      activity:
        - position: absolute
        - left: 8px
        - top: 6px
        - width: 14px
        - height: 14px
        - font-size: 0px
      location:
        - position: absolute
        - width: 100%
        - top: 52px
        - font-size: 14px
        - white-space: initial
        - text-overflow: initial
        - overflow: initial
        - align-self: middle
      geocoded_location:
        - position: absolute
        - width: 100%
        - bottom: 4px
        - font-size: 8px
        - white-space: initial
        - text-overflow: initial
        - overflow: initial
        - align-self: middle
  custom_fields:
    battery: >
      [[[
        const battery_level = states[`device_tracker.ha_${variables.phone}`].attributes.battery_level;
        if (
          states[`sensor.${variables.phone}_battery_state`].state == "Not Charging"
          || parseInt(battery_level) == 100
        ) {
          return `${battery_level}%`;
        } else {
          return `↯ ${battery_level}%`;
        }
      ]]]
    wifi: >
      [[[
        if (states[`device_tracker.wifi_${variables.phone}`].state == "home") {
          return `<ha-icon icon="mdi:wifi"/>`;
        }
      ]]]
    bt: >
      [[[
        if (states[`device_tracker.bt_${variables.phone}`].state == "home") {
          return `<ha-icon icon="mdi:bluetooth"/>`;
        }
      ]]]
    activity: >
      [[[
        if (states[`sensor.${variables.phone}_activity`].state == "Walking") {
          return `<ha-icon icon="mdi:walk"/>`;
        } else if (states[`sensor.${variables.phone}_activity`].state == "Running") {
          return `<ha-icon icon="mdi:run"/>`;
        } else if (states[`sensor.${variables.phone}_activity`].state == "Automotive") {
          return `<ha-icon icon="mdi:car"/>`;
        }
      ]]]
    location: >
      [[[ return states[`sensor.${variables.person}_display_location`].state; ]]]
    geocoded_location: >
      [[[ return states[`sensor.${variables.person}_geocoded_location`].state; ]]]
  variables:
    person: ""
    phone: ""
