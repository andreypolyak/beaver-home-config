window_device:
  template: base_icon
  triggers_update:
    - input_boolean.auto_window_kitchen
    - input_boolean.auto_window_bedroom
    - sensor.kitchen_window
    - sensor.bedroom_window
  icon: mdi:window-closed-variant
  hold_action:
    action: more-info
    haptic: success
  tap_action:
    action: call-service
    service: script.fire_custom_event
    service_data:
      custom_event_data: >
        [[[ return variables.room + "_window"; ]]]
      custom_event_data2: toggle
    haptic: success
  styles:
    custom_fields:
      position:
        - position: absolute
        - right: 8px
        - top: 8px
        - font-size: 12px
      auto:
        - position: absolute
        - left: 8px
        - top: 8px
        - font-size: 12px
  state:
    - value: >
        [[[ return states["sensor." + variables.room + "_window"].state != "STOPPED"; ]]]
      operator: template
      color: var(--paper-item-icon-active-color)
    - value: >
        [[[ return states["sensor." + variables.room + "_window"].state == "STOPPED"; ]]]
      operator: template
      color: var(--paper-card-background-color)
  custom_fields:
    position: >
      [[[
        return Math.round(states["sensor." + variables.room + "_window_target_position"].state) + "%";
      ]]]
    auto: >
      [[[
        if (states["input_boolean.auto_window_" + variables.room].state == "on") {
          return "";
        } else {
          return `<ha-icon icon="mdi:lock-outline" style="width: 14px; height: 14px;"></ha-icon>`;
        }
      ]]]
  variables:
    room: ""

window_settings:
  template: base
  show_label: false
  name: >
    [[[ return variables.room.charAt(0).toUpperCase() + variables.room.slice(1) ]]]
  icon: mdi:window-open-variant
  tap_action:
    action: navigate
    navigation_path: >
      [[[ return "/" + variables.room + "_drivent_panel"; ]]]
    haptic: success
  hold_action:
    action: more-info
    entity: >
      [[[ return "cover." + variables.room + "_window"; ]]]
    haptic: success
  variables:
    room: ""

window_base:
  show_label: false
  show_icon: false
  color_type: card
  styles:
    card:
      - height: 48px

window_position_0:
  template: window_base
  tap_action:
    action: call-service
    service: script.fire_custom_event
    service_data:
      custom_event_data: >
        [[[ return variables.room + "_window" ]]]
      custom_event_data2: 0
    haptic: success
  state:
    - value: >
        [[[ return states["sensor." + variables.room + "_window_target_position"].state == 0; ]]]
      operator: template
      color: var(--paper-item-icon-active-color)
    - value: >
        [[[ return states["sensor." + variables.room + "_window_target_position"].state != 0; ]]]
      operator: template
      color: var(--paper-card-background-color)
  name: 0%
  variables:
    room: ""

window_position_30:
  template: window_base
  tap_action:
    action: call-service
    service: script.fire_custom_event
    service_data:
      custom_event_data: >
        [[[ return variables.room + "_window" ]]]
      custom_event_data2: 30
    haptic: success
  state:
    - value: >
        [[[
          return states["sensor." + variables.room + "_window_target_position"].state > 0
            && states["sensor." + variables.room + "_window_target_position"].state < 50;
        ]]]
      operator: template
      color: var(--paper-item-icon-active-color)
    - value: >
        [[[
          return states["sensor." + variables.room + "_window_target_position"].state == 0
          || states["sensor." + variables.room + "_window_target_position"].state >= 50;
        ]]]
      operator: template
      color: var(--paper-card-background-color)
  name: 30%
  variables:
    room: ""

window_position_70:
  template: window_base
  tap_action:
    action: call-service
    service: script.fire_custom_event
    service_data:
      custom_event_data: >
        [[[ return variables.room + "_window"; ]]]
      custom_event_data2: 70
    haptic: success
  state:
    - value: >
        [[[
          return states["sensor." + variables.room + "_window_target_position"].state >= 50
            && states["sensor." + variables.room + "_window_target_position"].state < 100;
        ]]]
      operator: template
      color: var(--paper-item-icon-active-color)
    - value: >
        [[[
          return states["sensor." + variables.room + "_window_target_position"].state < 50
            || states["sensor." + variables.room + "_window_target_position"].state == 100;
        ]]]
      operator: template
      color: var(--paper-card-background-color)
  name: 70%
  variables:
    room: ""

window_position_100:
  template: window_base
  tap_action:
    action: call-service
    service: script.fire_custom_event
    service_data:
      custom_event_data: >
        [[[ return variables.room + "_window"; ]]]
      custom_event_data2: 100
    haptic: success
  state:
    - value: >
        [[[ return states["sensor." + variables.room + "_window_target_position"].state == 100; ]]]
      operator: template
      color: var(--paper-item-icon-active-color)
    - value: >
        [[[ return states["sensor." + variables.room + "_window_target_position"].state != 100; ]]]
      operator: template
      color: var(--paper-card-background-color)
  name: 100%
  variables:
    room: ""

window_auto:
  template: window_base
  tap_action:
    action: toggle
    haptic: success
  name: >
    [[[
      if (entity.state === "on") {
        return "Auto";
      } else {
        return "Manual";
      }
    ]]]
  styles:
    card:
      - border: solid 2px var(--primary-text-color)
